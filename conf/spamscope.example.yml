# Spouts configurations
# Spout file on file system
files-mails:

    # Reload new mails after reload.mails analyzed
    reload.mails: 1000

    # Waiting new mails, sleep seconds
    waiting.sleep: 1

    # Post processing 
    post_processing:

        # move or remove mails?
        what: remove 
            
        # if move where
        where: /mnt/testing/spamscope/mails/moved

        # if failed move in where.failed
        where.failed: /mnt/testing/spamscope/mails/failed

    # Mailboxes
    mailboxes: 
        test: 
            mail_server: hostname
            # Trust string is used to get sender IP address from mail server.
            # More details: https://github.com/SpamScope/mail-parser/blob/v0.4.6/mailparser/__init__.py#L221
            trust_string: "test_trust_string"
            files_pattern: "*untroubled*"
            priority: 1
            path_mails: /path/mails1

            # This flag enables Outlook msg parsing for every mails in mailbox
            # Default value is False
            outlook: False

            # List of others headers to get
            headers:
                - custom_one
                - custom_two
        test1: 
            mail_server: hostname
            trust_string: "test1_trust_string"
            files_pattern: "*"
            priority: 2
            path_mails: /path/mails2

                
# Bolts configurations
# Phishing bolt configuration
phishing:
    lists:
        subjects: 
            # Suspect subjects
            # Example in conf/keywords/subjects.example.yml
            generic: /path/to/generic_subjects
            custom: /path/to/custom_subjects
        
        targets:
            # Keyword for every targets
            # Example in conf/keywords/targets.example.yml
            generic: /path/to/generic_targets
            custom: /path/to/custom_targets


tokenizer:
    # If True mails with same hash are filtered and not analyzed.
    # Only the body will not saved
    filter_mails: True

    # Max number of hashes saved for filter function
    maxlen_mails: 1000000

    # If True attachments with same hash are filtered and not analyzed.
    # Only hashes will be saved
    filter_attachments: True

    # Max number of hashes saved for filter function
    maxlen_attachments: 1000000

    # If True the same ip address is filtered and not analyzed.
    filter_network: True

    # Max number of hashes saved for filter function
    maxlen_network: 1000000


# Network bolt configuration
network:
    # Shodan analysis https://www.shodan.io/
    shodan:
        enabled: False
        api_key: xxxxxxxxxxxxxxxxxxxxxxxxxx

    # VirusTotal analysis https://www.virustotal.com/
    virustotal:
        enabled: False
        api_key: xxxxxxxxxxxxxxxxxxxxxxxxxx


# RawMail bolt configuration
raw_mail:
    # SpamAssassin analysis: https://spamassassin.apache.org/
    spamassassin:
        enabled: False


# Attachments bolt configuration
attachments:
    content_types_blacklist:
        # All content types to remove from results
        # Example in content_types/blacklist/generic.example.yml
        generic: /path/to/generic_content_types
        custom: /path/to/custom_content_types

    # Apache Tika analysis: https://tika.apache.org/
    tika:
        # Enable Tika but it's very slow:
        enabled: False

        path_jar: /path/to/tika_jar

        # Like parameter -Xmx of java application
        memory_allocation:

        # All content types to extract details
        # Example in content_types/tika/generic.example.yml
        valid_content_types:
            generic: /path/to/generic_content_types
            custom: /path/to/custom_content_types

    # VirusTotal analysis: https://www.virustotal.com/
    virustotal:
        enabled: False

        api_key: xxxxxxxxxxxxxxxxxxxxxxxxxx

        # All content types to analyze with virustotal
        # Example in content_types/virustotal/generic.example.yml
        # Now is not active
        content_types_details:
            generic: /path/to/generic_content_types
            custom: /path/to/custom_content_types

    # Thug analysis: https://github.com/buffer/thug
    thug:
        enabled: False

        # File extensions to submit to thug
        extensions:
            - .html
            - .js
            - .jse

        # More details:
        # http://buffer.github.io/thug/doc/usage.html#basic-usage
        user_agents:
            - win7ie90

        referer: http://www.google.com/

    # Zemana Antimalware analysis: https://www.zemana.com/
    # only premium users
    zemana:
        enabled: False

        PartnerId: xxxxx
        UserId: xxxxx
        ApiKey: xxxxx
        useragent: SpamScope


# Urls
urls:
    whitelists:
        # Only second level domains to whitelisting
        # Example in conf/whitelists/generic.example.yml
        alexa:
            path: /path/to/alexa
            expiry: 2016-06-28T12:33:00.000Z # date ISO 8601 only UTC
        test1:
            path: /path/to/test1
            expiry:
        test2:
            path: /path/to/test2


# Output debug bolt configuration
output-debug:
    json.indent: 4
    output.path: /path/to/output


# Output Redis
#hosts:
#The hostname(s) of your Redis server(s). Ports may be specified on any
#hostname, which will override the global port config.
#If the hosts list is an array, it will pick one random host to connect to,
#if that host is disconnected it will then pick another.

#For example:
    #"127.0.0.1"
    #["127.0.0.1", "127.0.0.2"]
    #["127.0.0.1:6380", "127.0.0.1"]

#shuffle_hosts:
#Shuffle the host list during connection.

#port:
#The default port to connect on. Can be overridden on any host.

#db:
#The Redis database number.

#password:
#Password to authenticate with.  There is no authentication by default.

#reconnect_interval:
#Interval for reconnecting to failed Redis connections.

#max_retry:
#number of connect retries

#flush_size:
#max number of json to send in a bulk

#queue_name:
#name of Redis server list

output-redis:
    servers:
        hosts:
            - "localhost:6379"
            - "localhost:6380"
        shuffle_hosts: True
        port: 6379
        db: 0
        password:
        reconnect_interval: 1
        max_retry: 60
        flush_size: 50
        queue_mails: spamscope_mails
        queue_attachments: spamscope_attachments


output-elasticsearch:
    servers:
        hosts:
            - "node1:9200"
            - "node2"

        # Prefix with dash '-'. SpamScope use a index for day
        index.prefix.mails: spamscope_mails-
        doc.type.mails: analysis

        index.prefix.attachments: spamscope_attachments-
        doc.type.attachments: analysis

        # max number of json to send in a bulk
        flush_size: 50
